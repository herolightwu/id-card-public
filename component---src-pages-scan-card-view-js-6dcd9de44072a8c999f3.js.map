{"version":3,"sources":["webpack:///./src/pages/scan-card/view.js"],"names":["defaultFields","serverURL","label","placeholder","type","name","ViewCard","props","onNext","navigate","onSave","onCancel","setFieldValues","setState","openOrderConfirm","showEditButton","barcode","state","sel_card","webp","compressed_face_image","photo","face_image","showError","onConfirmOrder","onPrint","isLogin","formFields","resultTitle","openResultDlg","loader","isPhotoChanged","location","created_user","card_program","val","fields","this","i","length","value","componentDidMount","dispatch","userData","basicData","getCreatedUser","getCardProgram","valFields","program_template","formfields","ind","toString","toLowerCase","replace","push","console","log","Object","entries","forEach","key","index","headers","localStorage","getItem","Promise","resolve","card_URL","axios","get","then","response","user_data","data","catch","error","finally","program_id","prog_data","getCardById","card_id","db_data","setFieldValuesFromDB","render","classes","transitionDuration","isDesktop","btnStyle","width","float","marginLeft","marginRight","marginBottom","minWidth","rightGridStyle","menuIndex","container","justify","spacing","style","minHeight","item","sm","xs","className","cardViewGridLeft","editMode","first_name","middle_name","last_name","statesel_card","ordered_date","onChanged","changedWebp","changedPhoto","cardViewGrid","padding","elevation","map","one","disable","showErr","Utils","getKey","bind","md","display","flexDirection","justifyContent","alignItems","flexWrap","variant","size","color","onClick","disabled","in","timeout","transitionDelay","unmountOnExit","aria-label","position","bottom","right","src","EditImg","objectFit","marginTop","title","open","okTitle","onOk","cancel","backdrop","React","Component","useDispatch","useSelector","app","useStyles","theme","useTheme","enter","transitions","duration","enteringScreen","exit","leavingScreen","useMediaQuery"],"mappings":"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","file":"component---src-pages-scan-card-view-js-6dcd9de44072a8c999f3.js","sourcesContent":["import React from 'react'\r\n\r\nimport { navigate } from 'gatsby'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Button from '@material-ui/core/Button'\r\nimport useStyles from '../../utils/styles'\r\nimport { MainLayout } from '../../components/Layout'\r\nimport { Backdrop, CircularProgress, Grid, Paper, useTheme } from '@material-ui/core'\r\nimport CardFrontBack from '../../components/scan-card/CardFrontBack'\r\nimport Zoom from '@material-ui/core/Zoom'\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\r\nimport Utils from '../../utils/utils'\r\nimport Fab from '@material-ui/core/Fab'\r\nimport EditImg from '../../assets/images/edit.png'\r\nimport FilledTextInput from '../../components/scan-card/FilledTextInput'\r\nimport { ConfirmDlg } from '../../components/Dialog/PhotoPickerDlg'\r\n\r\nimport axios from 'axios'\r\nimport { serverURL } from '../../utils/RestAPI'\r\n\r\nconst API_URL = serverURL + '/api'\r\n\r\nconst defaultFields = [\r\n  {\r\n    label: 'Card Program',\r\n    placeholder: 'Card Program Name',\r\n    type: 'text',\r\n    name: 'program_name',\r\n  },\r\n  {\r\n    label: 'Card ID',\r\n    placeholder: 'Card ID Number',\r\n    type: 'text',\r\n    name: 'card_id',\r\n  },\r\n  {\r\n    label: 'Card Status',\r\n    placeholder: 'Status',\r\n    type: 'text',\r\n    name: 'available',\r\n  },  \r\n]\r\n\r\nexport class ViewCard extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      isLogin: true,\r\n      showEditButton: true,\r\n      formFields: defaultFields,\r\n      openOrderConfirm: false,\r\n      resultTitle: '',\r\n      openResultDlg: false,\r\n      loader: false,\r\n      isPhotoChanged:false,\r\n      webp:props.location.state.compressed_face_image,\r\n      photo:props.location.state.face_image,\r\n      showError:{},\r\n      barcode:'',\r\n      created_user:{},\r\n      card_program:{},\r\n      sel_card:{},\r\n    }\r\n  }\r\n\r\n  formFields (val, placeholder) {\r\n    let fields = this.state.formFields\r\n    for (let i = 0; i < fields.length; i++) {\r\n      if (fields[i].placeholder == placeholder){\r\n        fields[i].value = val \r\n      }\r\n    }    \r\n  }\r\n\r\n  componentDidMount() {\r\n    const { dispatch, userData, basicData } = this.props\r\n    \r\n    this.setState({\r\n      barcode:this.props.location.state.barcode,\r\n    })\r\n    this.getCreatedUser()\r\n    this.getCardProgram()\r\n  }\r\n\r\n  setFieldValues() {\r\n    let valFields = this.state.card_program.program_template\r\n    let formfields = defaultFields\r\n    \r\n    for(let ind = 0; ind < valFields.length; ind++){\r\n      valFields[ind].name = valFields[ind].label.toString().toLowerCase().replace(/\\s/g, '_')\r\n      formfields.push(valFields[ind])\r\n    }\r\n    console.log(\"form fileds :\", formfields)\r\n\r\n    Object.entries(this.props.location.state).forEach(([key, value]) => {\r\n      for(let index = 0; index < formfields.length; index++){\r\n        if (key == formfields[index].name){\r\n          formfields[index].value = value\r\n        }\r\n      }\r\n    })\r\n\r\n    this.setState({formFields: formfields, sel_card: this.props.location.state})\r\n  }\r\n\r\n  getCreatedUser(){\r\n    const token = localStorage.getItem('token');\r\n    const beartoken = \"Bearer \" + token;\r\n    const headers = { \r\n      'Authorization': beartoken\r\n    };\r\n\r\n    return new Promise(resolve => {\r\n      const card_URL = serverURL + '/api/users/'+this.props.location.state.created_user;\r\n      axios.get(card_URL, { headers })\r\n      .then(response => {\r\n        const user_data = response.data.data;\r\n        \r\n        this.setState({created_user: user_data[0]})\r\n        resolve(user_data[0]);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        navigate('/manage-cards/')\r\n        return null;\r\n      }) \r\n      .finally(()=>{\r\n      })\r\n    })\r\n  }\r\n\r\n  getCardProgram() {\r\n    const token = localStorage.getItem('token');\r\n    const beartoken = \"Bearer \" + token;\r\n    const headers = { \r\n      'Authorization': beartoken\r\n    };\r\n\r\n    return new Promise(resolve => {\r\n      const card_URL = serverURL + '/api/cardprogram/'+this.props.location.state.program_id;\r\n      axios.get(card_URL, { headers })\r\n      .then(response => {\r\n        const prog_data = response.data.data;\r\n        \r\n        this.setState({card_program: prog_data[0]}, ()=>{\r\n          this.setFieldValues()\r\n        })\r\n        resolve(prog_data[0]);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        navigate('/scan-card/')\r\n        return null;\r\n      }) \r\n      .finally(()=>{\r\n      })\r\n    })\r\n  }\r\n\r\n  getCardById(){\r\n    const token = localStorage.getItem('token');\r\n    const beartoken = \"Bearer \" + token;\r\n    const headers = { \r\n      'Authorization': beartoken\r\n    };\r\n\r\n    return new Promise(resolve => {\r\n      const card_URL = serverURL + '/api/cards/'+this.props.location.state.card_id;\r\n      axios.get(card_URL, { headers })\r\n      .then(response => {\r\n        const db_data = response.data.data;\r\n        \r\n        this.setState({sel_card: db_data[0]}, ()=>{\r\n          this.setFieldValuesFromDB()\r\n        })\r\n        resolve(db_data[0]);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.setFieldValues()\r\n      }) \r\n      .finally(()=>{\r\n      })\r\n    })\r\n  }\r\n\r\n  setFieldValuesFromDB() {\r\n    let valFields = this.state.card_program.program_template\r\n    let formfields = defaultFields\r\n    \r\n    for(let ind = 0; ind < valFields.length; ind++){\r\n      valFields[ind].name = valFields[ind].label.toString().toLowerCase().replace(/\\s/g, '_')\r\n      formfields.push(valFields[ind])\r\n    }\r\n    console.log(\"form fileds :\", formfields)\r\n\r\n    Object.entries(this.state.sel_card).forEach(([key, value]) => {\r\n      for(let index = 0; index < formfields.length; index++){\r\n        if (key == formfields[index].name){\r\n          formfields[index].value = value\r\n        }\r\n      }\r\n    })\r\n\r\n    this.setState({formFields: formfields})\r\n  }\r\n\r\n  onNext = () => {\r\n    navigate('/scan-card/')\r\n  }\r\n\r\n  onSave = () => {}\r\n\r\n  onCancel = () => {\r\n    this.setFieldValues()\r\n\r\n    this.setState({ \r\n      openOrderConfirm: false, \r\n      showEditButton: true,\r\n      barcode:this.state.sel_card.barcode,\r\n      webp:this.state.sel_card.compressed_face_image,\r\n      photo:this.state.sel_card.face_image,\r\n      showError:false\r\n    })\r\n  }\r\n\r\n  onConfirmOrder = () => {}\r\n\r\n  onPrint = () => {}\r\n\r\n  render() {\r\n    const { userData, classes, transitionDuration, isDesktop } = this.props\r\n\r\n    const buttonWidth = isDesktop ? '50%' : 120\r\n\r\n    const btnStyle = {\r\n      width: buttonWidth,\r\n      float: 'right',\r\n      marginLeft: 5,\r\n      marginRight: 5,\r\n      marginBottom: 20,\r\n      minWidth: 120,\r\n    }\r\n\r\n    const rightGridStyle = isDesktop\r\n      ? {\r\n          minWidth: 150,\r\n        }\r\n      : {\r\n          minWidth: '90vw',\r\n        }\r\n        \r\n    return (\r\n      <MainLayout menuIndex={this.props.menuIndex}>\r\n        <Grid\r\n          container\r\n          justify=\"center\"\r\n          spacing={2}\r\n          style={{ minHeight: '100%' }}\r\n        >\r\n          <Grid item sm={4} xs={12} className={classes.cardViewGridLeft}>\r\n          <CardFrontBack editMode={!this.state.showEditButton}\r\n                      card_id={this.state.sel_card.card_id}\r\n                      program_id={this.state.card_program.program_id}\r\n                      first_name={this.state.sel_card.first_name}\r\n                      middle_name={this.state.sel_card.middle_name}\r\n                      last_name={this.state.sel_card.last_name}\r\n                      webp={this.state.sel_card.webp}\r\n                      photo={this.statesel_card.photo} \r\n                      ordered_date={this.state.sel_card.ordered_date} \r\n                      barcode={this.state.sel_card.barcode} \r\n                      onChanged={(changedWebp, changedPhoto) => {\r\n                            console.log('picture changed')\r\n                            this.setState({\r\n                              isPhotoChanged:true,\r\n                              webp:changedWebp,\r\n                              photo:changedPhoto,\r\n                            })\r\n                      }}/>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={5}\r\n            xs={12}\r\n            className={classes.cardViewGrid}\r\n            style={{ marginRight: 5 }}\r\n          >\r\n            <Paper style={{ padding: '0 10px' }} elevation={0}>\r\n              {this.state.formFields.map((one, index) => {\r\n                let disable = true\r\n                let showErr = ''\r\n                if(one.name && !this.state.showEditButton){\r\n                  disable = false\r\n                  showErr = this.state.showError[one.name];\r\n                }\r\n                return (\r\n                  <FilledTextInput\r\n                    key={Utils.getKey()}\r\n                    label={one.label}\r\n                    type={one.type}\r\n                    value ={one.value}\r\n                    placeholder={one.placeholder}\r\n                    formFields={this.formFields.bind(this)}\r\n                    showError={showErr} \r\n                    disable={disable}\r\n                  />\r\n                )\r\n              })}\r\n            </Paper>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            md={3}\r\n            sm={12}\r\n            className={classes.cardViewGrid}\r\n            style={rightGridStyle}\r\n          >\r\n            <Paper\r\n              style={{\r\n                padding: 10,\r\n                display: 'flex',\r\n                width: '100%',\r\n\r\n                flexDirection: isDesktop ? 'column' : 'row',\r\n                justifyContent: 'center',\r\n                alignItems: isDesktop ? 'stretch' : 'center',\r\n                flexWrap: isDesktop ? 'nowrap' : 'wrap',\r\n              }}\r\n              elevation={0}\r\n            >\r\n              {this.state.showEditButton ? (\r\n                <>\r\n                  <div>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      size=\"medium\"\r\n                      color=\"primary\"\r\n                      style={btnStyle}\r\n                      onClick={this.onNext}\r\n                    >\r\n                      Next Card\r\n                    </Button>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      size=\"medium\"\r\n                      color=\"primary\"\r\n                      style={btnStyle}\r\n                      onClick={this.onPrint}\r\n                    >\r\n                      Print\r\n                    </Button>\r\n                  </div>\r\n                  <div>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      size=\"medium\"\r\n                      color=\"primary\"\r\n                      style={btnStyle}\r\n                    >\r\n                      Write NFC\r\n                    </Button>\r\n                  </div>\r\n                  <div>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      size=\"medium\"\r\n                      color=\"secondary\"\r\n                      style={btnStyle}\r\n                    >\r\n                      Reject\r\n                    </Button>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <div>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      size=\"medium\"\r\n                      color=\"primary\"\r\n                      style={btnStyle}\r\n                      onClick={this.onSave}\r\n                      disabled={this.state.showEditButton}\r\n                    >\r\n                      update\r\n                    </Button>\r\n                  </div>\r\n                  <div>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      size=\"medium\"\r\n                      color=\"primary\"\r\n                      style={btnStyle}\r\n                      onClick={onCancel}\r\n                    >\r\n                      cancel\r\n                    </Button>\r\n                  </div>\r\n                </>\r\n              )}\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Zoom\r\n          key={Utils.getKey()}\r\n          in={this.state.showEditButton}\r\n          timeout={transitionDuration}\r\n          style={{\r\n            transitionDelay: `${500}ms`,\r\n          }}\r\n          unmountOnExit\r\n        >\r\n          <Fab\r\n            aria-label={''}\r\n            style={{ position: 'fixed', bottom: 20, right: 30 }}\r\n            color={'primary'}\r\n            onClick={() => {\r\n              this.setState({ showEditButton: !this.state.showEditButton })\r\n            }}\r\n          >\r\n            <img\r\n              src={EditImg}\r\n              style={{ width: 25, objectFit: 'contain', marginTop: 25 }}\r\n            />\r\n          </Fab>\r\n        </Zoom>\r\n        <ConfirmDlg\r\n          title='You are about to update this card, Are you sure you want to do this?'\r\n          open={this.state.openOrderConfirm}\r\n          okTitle='Update'\r\n          onOk={this.onConfirmOrder}\r\n          onCancel={this.onCancel}\r\n        />\r\n        <ConfirmDlg\r\n          title={this.state.resultTitle}\r\n          open={this.state.openResultDlg}\r\n          okTitle='OK'\r\n          cancel=''\r\n          onOk={()=>{\r\n            this.setState({ \r\n              showEditButton: true,\r\n              openResultDlg: false\r\n            })\r\n          }}\r\n          onCancel={() => {\r\n            this.setState({ \r\n              showEditButton: false,\r\n              openResultDlg: false\r\n            })\r\n          }}\r\n        />\r\n\r\n        <Backdrop className={classes.backdrop} open={this.state.loader}>\r\n          <CircularProgress color='inherit' />\r\n        </Backdrop>\r\n      </MainLayout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default function(props) {\r\n  const dispatch = useDispatch()\r\n  const userData = useSelector(state => state.app.userData)\r\n  const classes = useStyles()\r\n\r\n  const theme = useTheme()\r\n  const transitionDuration = {\r\n    enter: theme.transitions.duration.enteringScreen,\r\n    exit: theme.transitions.duration.leavingScreen,\r\n  }\r\n\r\n  // const isDesktop = useMediaQuery(theme.breakpoints.up('md'))\r\n  const isDesktop = useMediaQuery('(min-width:1053px)')\r\n\r\n  return (\r\n    <ViewCard\r\n      {...props}\r\n      menuIndex={0}\r\n      dispatch={dispatch}\r\n      isDesktop={isDesktop}\r\n      //   userData={userData}\r\n      classes={classes}\r\n      transitionDuration={transitionDuration}\r\n    />\r\n  )\r\n}\r\n"],"sourceRoot":""}