{"version":3,"sources":["webpack:///./src/components/scan-card/WebCamView.js","webpack:///./src/pages/scan-card/index.js"],"names":["videoConstraints","width","height","facingMode","WebCamView","props","React","useState","capturedData","setCapturedData","x","y","useEffect","navigator","mediaDevices","getUserMedia","localStorage","getItem","audio","video","stream","getTracks","forEach","stop","setItem","err","console","log","setTimeout","capture","useCallback","a","webcamRef","current","imageSrc","getScreenshot","decodeCapturedData","state","length","onDetected","img","Promise","resolve","reject","token","urlAPI","cryptoURL","headers","Authorization","body","axios","post","then","response","data","status","catch","error","useRef","Paper","elevation","style","maxWidth","maxHeight","display","flexDirection","justifyContent","alignItems","marginTop","position","ref","screenshotFormat","top","left","textAlign","backgroundColor","VColor","opacityBlack","zIndex","Button","variant","color","paddingTop","onClick","navigate","border","ScanCard","onTap","gotoView","isLogin","card_programs","loadCardTemplate","card_URL","serverURL","get","imagetps","map","row","front","card_image_front","program_id","program_name","matrix_size","edac","compression","pxpcw","sample_width","logo","program_template","created_date","setState","finally","Math","random","componentDidMount","this","dispatch","userData","basicData","render","classes","menuIndex","Component","useDispatch","useSelector","app","useStyles"],"mappings":"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","file":"component---src-pages-scan-card-index-js-d288977dbd2ae8c5a958.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { navigate } from 'gatsby'\r\nimport axios from 'axios'\r\n\r\nimport { Button, Paper } from '@material-ui/core'\r\nimport Webcam from 'react-webcam'\r\nimport { VColor } from '../../utils/constants'\r\nimport { cryptoURL } from '../../utils/RestAPI'\r\nimport Cropper from 'react-easy-crop'\r\n\r\nimport getCroppedImg from '../cropping/cropImage'\r\n\r\nconst videoConstraints = {\r\n  width: 600,\r\n  height: 600,\r\n  facingMode: \"user\"\r\n}\r\n\r\nexport default function WebCamView(props) {\r\n  const [capturedData, setCapturedData] = React.useState()\r\n\r\n  const [crop, setCrop] = useState({ x: 0, y: 0 })\r\n  const [zoom, setZoom] = useState(1)\r\n\r\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState(null)\r\n  const [croppedImage, setCroppedImage] = useState(null)\r\n\r\n  useEffect(()=>{\r\n    if( navigator.mediaDevices.getUserMedia != null){\r\n      const cam_access = localStorage.getItem('camera_access')\r\n      if (cam_access == 'false'){\r\n        navigator.mediaDevices.getUserMedia({audio:true,video:true}, function(stream) {\r\n          stream.getTracks().forEach(x=>x.stop());\r\n          localStorage.setItem('camera_access', 'true')\r\n        }, err=>console.log(err));\r\n      }\r\n    } else {\r\n      localStorage.setItem('camera_access', 'false')\r\n    }\r\n\r\n  }) \r\n\r\n  useEffect(()=>{\r\n    setTimeout(() => {\r\n      capture()\r\n    }, 5000);\r\n  }, [capturedData])\r\n\r\n  const capture = React.useCallback( async () => {\r\n    if (webcamRef.current != null){\r\n      const imageSrc = webcamRef.current.getScreenshot()\r\n      console.log('captured image :', imageSrc)\r\n      try {\r\n        let state = await decodeCapturedData(imageSrc)\r\n        console.log(\"state : \", state)\r\n        \r\n        if (state.length > 600){\r\n          props.onDetected(state)\r\n        } else {\r\n          setCapturedData(imageSrc)\r\n        }\r\n      } catch (ex){\r\n        console.log(\"error : \", ex)\r\n        setCapturedData(null)\r\n      }\r\n    }\r\n  }, [webcamRef])\r\n\r\n  const decodeCapturedData = (img) =>{\r\n    return new Promise((resolve, reject)=>{\r\n      if (img){\r\n        const token = localStorage.getItem('token')\r\n        const userid = localStorage.getItem('userId')\r\n        const urlAPI = cryptoURL + '/api/decode/' \r\n        const beartoken = 'Bearer ' + token\r\n        const headers = {\r\n          Authorization: beartoken,\r\n        }\r\n\r\n        let body = {}\r\n        body['base64image'] = img\r\n        body['matrixsize'] = 114\r\n        body['samplewidth'] = 4\r\n        body['pixelspercell'] = 4\r\n        body['edac'] = 2\r\n\r\n        console.log(\"body : \", body)\r\n\r\n        axios\r\n            .post(urlAPI, body, { headers })  \r\n            .then(response => {\r\n              console.log(\"response : \",response)\r\n              if (response.data.status === 'Unauthorized') {\r\n                reject('unauthorized')\r\n              } else {\r\n                resolve(response.data.data);\r\n              }\r\n            })\r\n            .catch(error => {\r\n              reject('wrong vericode')\r\n            })\r\n      } else {\r\n        reject('wrong vericode')\r\n      }\r\n    })\r\n  }\r\n\r\n  // const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {\r\n  //   console.log(\r\n  //     'croppedArea, croppedAreaPixels: ',\r\n  //     croppedArea,\r\n  //     croppedAreaPixels\r\n  //   )\r\n  //   setCroppedAreaPixels(croppedAreaPixels)\r\n  // }, [])\r\n\r\n  // const showCroppedImage = useCallback(async () => {\r\n  //   try {\r\n  //     const croppedImage = await getCroppedImg(capturedData, croppedAreaPixels)\r\n  //     console.log('donee', { croppedImage })\r\n  //     setCroppedImage(croppedImage)\r\n  //   } catch (e) {\r\n  //     console.error(e)\r\n  //   }\r\n  // }, [croppedAreaPixels])\r\n\r\n  // const onClose = useCallback(() => {\r\n  //   setCroppedImage(null)\r\n  // }, [])\r\n\r\n  const webcamRef = React.useRef(null)\r\n\r\n  // const handleCrop = () => {\r\n  //   showCroppedImage()\r\n  // }\r\n\r\n  const handleCancel = () => {\r\n    // setCroppedImage(null)\r\n    // setCapturedData(null)\r\n\r\n    // clearInterval(intervalId)\r\n    // setIntervalId(0)\r\n    navigate('/order-card/')\r\n  }\r\n\r\n  // const handleContinue = ()=>{\r\n  //   // navigate('/scan-card/view')\r\n  //   setCapturedData(null)\r\n  //   setCroppedImage(null)\r\n  // }\r\n\r\n  return (\r\n    <Paper\r\n      elevation={0}\r\n      style={{\r\n        width: '80vw',\r\n        height: '80vw',\r\n        maxWidth: 600,\r\n        maxHeight: 600,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n\r\n        // border: '1px solid red',\r\n      }}\r\n    >      \r\n      <div style={{ marginTop: 30, position: 'relative' }}>\r\n        <Webcam\r\n          audio={false}\r\n          height={'100%'}\r\n          ref={webcamRef}\r\n          screenshotFormat=\"image/jpeg\"\r\n          width={'100%'}\r\n          videoConstraints={videoConstraints}\r\n        />\r\n        <div\r\n          style={{\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            textAlign: 'center',\r\n            width: '100%',\r\n            height: '10%',\r\n            backgroundColor: VColor.opacityBlack,\r\n            zIndex: 1000,\r\n          }}\r\n        ></div>\r\n        <div\r\n          style={{\r\n            position: 'absolute',\r\n            top: '90%',\r\n            left: 0,\r\n            width: '100%',\r\n            height: '10%',\r\n            backgroundColor: VColor.opacityBlack,\r\n            zIndex: 1001,\r\n            textAlign: 'center',\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"text\"\r\n            style={{ color: 'black', paddingTop: '10%' }}\r\n            onClick={ handleCancel }\r\n          >\r\n            Click Here to Cancel\r\n          </Button>\r\n        </div>\r\n        <div\r\n          style={{\r\n            position: 'absolute',\r\n            top: '10%',\r\n            left: 0,\r\n            width: '10%',\r\n            height: '80%',\r\n            backgroundColor: VColor.opacityBlack,\r\n            zIndex: 1000,\r\n          }}\r\n        ></div>\r\n        <div\r\n          style={{\r\n            position: 'absolute',\r\n            top: '10%',\r\n            left: '90%',\r\n            width: '10%',\r\n            height: '80%',\r\n            backgroundColor: VColor.opacityBlack,\r\n            zIndex: 1000,\r\n          }}\r\n        ></div>\r\n        <div\r\n          style={{\r\n            position: 'absolute',\r\n            top: '10%',\r\n            left: '10%',\r\n            border: '1px solid green',\r\n            width: '80%',\r\n            height: '80%',\r\n            zIndex: 1000,\r\n            textAlign: 'center',\r\n          }}\r\n        ></div>\r\n      </div>\r\n      \r\n    </Paper>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport { navigate } from 'gatsby'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport useStyles from '../../utils/styles'\r\nimport { MainLayout } from '../../components/Layout'\r\nimport WebCamView from '../../components/scan-card/WebCamView'\r\nimport axios from 'axios'\r\nimport { serverURL } from '../../utils/RestAPI'\r\n\r\nclass ScanCard extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      isLogin: true,\r\n      card_programs:[]\r\n    }    \r\n  }\r\n\r\n  loadCardTemplate(){\r\n    const token = localStorage.getItem('token');\r\n    const beartoken = \"Bearer \" + token;\r\n    const headers = { \r\n      'Authorization': beartoken\r\n    };\r\n\r\n    return new Promise(resolve => {\r\n       setTimeout(() => {\r\n        const card_URL = serverURL + '/api/allcardprograms';\r\n        axios.get(card_URL, { headers })\r\n        .then(response => {\r\n          const cardprograms = response.data.data;\r\n          var imagetps = cardprograms.map((row) => {\r\n              var cardTemplate = {\r\n                front: row.card_image_front,\r\n                program_id: row.program_id,\r\n                program_name:row.program_name,\r\n                matrix_size: row.matrix_size,\r\n                edac:row.edac,\r\n                compression: row.compression,\r\n                pxpcw: row.pxpcw,\r\n                sample_width: row.sample_width,\r\n                logo: row.logo,\r\n                program_template: row.program_template,\r\n                created_date: row.created_date\r\n              }\r\n            return cardTemplate\r\n           });\r\n           this.setState({card_programs: imagetps})\r\n          resolve(imagetps);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          navigate('/scan-card/')\r\n          return null;\r\n        }) \r\n        .finally(()=>{\r\n //         setLoading(false)\r\n        })\r\n      }, Math.random() * 500 + 100) // simulate network latency\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { dispatch, userData, basicData } = this.props\r\n\r\n    this.loadCardTemplate()\r\n  }\r\n\r\n  onTap = ()=>{\r\n      navigate('/scan-card/view')\r\n  }\r\n\r\n  gotoView = data => {\r\n    \r\n    // var scanedCard={\r\n    //   CardName: data.program_name,\r\n    //   cardID: data.card_id,\r\n    //   address1: data.address1,\r\n    //   address2: data.address2,  \r\n    //   available: data.available, \r\n    //   barcode: data.barcode,\r\n    //   city: data.city,  \r\n    //   code_fields: data.code_fields,  \r\n    //   compressed_face_image: data.compressed_face_image,       \r\n    //   email: data.email,   \r\n    //   face_image: data.face_image,  \r\n    //   first_name: data.first_name,  \r\n    //   middle_name: data.middle_name,       \r\n    //   last_name: data.last_name, \r\n    //   nfc_fields: data.nfc_fields, \r\n    //   phone: data.phone, \r\n    //   program_id: data.program_id, \r\n    //   program_name: data.program_name,\r\n    //   server_fields: data.server_fields, \r\n    //   state: data.state, \r\n    //   zip_code: data.zip_code,\r\n    //   ordered_date: data.created_date,\r\n    // }\r\n     console.log(\"card data : \", data); // check data fields\r\n     navigate('/scan-card/view', {state: data})\r\n  }\r\n\r\n  render() {\r\n    const { userData, classes } = this.props\r\n\r\n    return (\r\n      <MainLayout menuIndex={0}>\r\n        <WebCamView \r\n          onClick={this.onTap}\r\n          onDetected={(data) => {\r\n            gotoView(data)\r\n          }}\r\n        />\r\n     \r\n      </MainLayout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default function(props) {\r\n  const dispatch = useDispatch()\r\n  const userData = useSelector(state => state.app.userData)\r\n  const classes = useStyles()\r\n  \r\n  return (\r\n    <ScanCard\r\n      {...props}\r\n      dispatch={dispatch}\r\n      userData={userData}\r\n      classes={classes}\r\n    />\r\n  )\r\n}\r\n"],"sourceRoot":""}