{"version":3,"sources":["webpack:///./src/pages/manage-cards/view.js"],"names":["API_URL","serverURL","defaultFields","label","placeholder","type","name","ViewManageCard","props","onSave","token","localStorage","getItem","userid","urlAPI","cryptoURL","headers","Authorization","fields","state","formFields","isValid","newShowError","i","length","value","setState","showError","body","code_fields","server_fields","extend","program_name","card_id","available","webp","location","program_id","req_body","card_program","matrix_size","compression","edac","loader","axios","post","then","response","data","status","barcode","openOrderConfirm","message","toString","catch","error","onCancel","Object","entries","forEach","key","index","showEditButton","compressed_face_image","photo","face_image","onConfirmOrder","put","console","log","resultTitle","openResultDlg","showCodeLabel","onPrint","card_image_front","card_image_back","logo","vcard","isLogin","isPhotoChanged","created_user","val","this","componentDidMount","dispatch","userData","basicData","getCreatedUser","getCardProgram","Promise","resolve","card_URL","get","prog_data","setFieldValues","navigate","finally","valFields","program_template","formfields","ind","push","toLowerCase","replace","user_data","render","classes","transitionDuration","isDesktop","btnStyle","width","float","marginLeft","marginRight","marginBottom","minWidth","rightGridStyle","menuIndex","container","justify","spacing","style","minHeight","item","sm","xs","className","cardViewGridLeft","editMode","program_front","program_back","first_name","middle_name","last_name","ordered_date","onChanged","changedWebp","changedPhoto","cardViewGrid","padding","elevation","map","one","disable","showErr","Utils","getKey","bind","md","display","flexDirection","justifyContent","alignItems","flexWrap","variant","size","color","onClick","disabled","in","timeout","transitionDelay","unmountOnExit","aria-label","position","bottom","right","src","EditImg","objectFit","marginTop","title","open","okTitle","onOk","cancel","backdrop","React","Component","useDispatch","useSelector","app","useStyles","theme","useTheme","enter","transitions","duration","enteringScreen","exit","leavingScreen","useMediaQuery"],"mappings":"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","file":"component---src-pages-manage-cards-view-js-264d9e6c17af93ea417b.js","sourcesContent":["import React from 'react'\r\n\r\nimport axios from 'axios'\r\nimport { navigate } from 'gatsby'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Button from '@material-ui/core/Button'\r\nimport useStyles from '../../utils/styles'\r\nimport { MainLayout } from '../../components/Layout'\r\nimport { Backdrop, CircularProgress, Grid, Paper, useTheme } from '@material-ui/core'\r\nimport CardFrontBack from '../../components/scan-card/CardFrontBack'\r\nimport Zoom from '@material-ui/core/Zoom'\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\r\nimport Utils from '../../utils/utils'\r\nimport Fab from '@material-ui/core/Fab'\r\nimport EditImg from '../../assets/images/edit.png'\r\nimport FilledTextInput from '../../components/scan-card/FilledTextInput'\r\nimport { ConfirmDlg } from '../../components/Dialog/PhotoPickerDlg'\r\nimport { serverURL, cryptoURL } from '../../utils/RestAPI'\r\n\r\n\r\nconst API_URL = serverURL + '/api'\r\n\r\nconst defaultFields = [\r\n  {\r\n    label: 'Card Program',\r\n    placeholder: 'Card Program Name',\r\n    type: 'text',\r\n    name: 'program_name',\r\n  },\r\n  {\r\n    label: 'Card ID',\r\n    placeholder: 'Card ID Number',\r\n    type: 'text',\r\n    name: 'card_id',\r\n  },\r\n  {\r\n    label: 'Card Status',\r\n    placeholder: 'Status',\r\n    type: 'text',\r\n    name: 'available',\r\n  },  \r\n]\r\n\r\nexport class ViewManageCard extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      isLogin: true,\r\n      showEditButton: true,\r\n      formFields: defaultFields,\r\n      openOrderConfirm: false,\r\n      resultTitle: '',\r\n      openResultDlg: false,\r\n      loader: false,\r\n      isPhotoChanged:false,\r\n      webp:props.location.state.compressed_face_image,\r\n      photo:props.location.state.face_image,\r\n      showError:{},\r\n      barcode:'',\r\n      created_user:{},\r\n      card_program:{},\r\n    }\r\n  }\r\n\r\n  formFields (val, placeholder) {\r\n    let fields = this.state.formFields\r\n    for (let i = 0; i < fields.length; i++) {\r\n      if (fields[i].placeholder == placeholder){\r\n        fields[i].value = val \r\n      }\r\n    }    \r\n  }\r\n\r\n  componentDidMount() {\r\n    const { dispatch, userData, basicData } = this.props\r\n    \r\n    this.setState({\r\n      barcode:this.props.location.state.barcode,\r\n    })\r\n\r\n    this.getCreatedUser()\r\n    this.getCardProgram()\r\n  }\r\n\r\n  getCardProgram() {\r\n    const token = localStorage.getItem('token');\r\n    const beartoken = \"Bearer \" + token;\r\n    const headers = { \r\n      'Authorization': beartoken\r\n    };\r\n\r\n    return new Promise(resolve => {\r\n      const card_URL = serverURL + '/api/cardprogram/'+this.props.location.state.program_id;\r\n      axios.get(card_URL, { headers })\r\n      .then(response => {\r\n        const prog_data = response.data.data;\r\n        \r\n        this.setState({card_program: prog_data[0]}, ()=>{\r\n          this.setFieldValues()\r\n        })\r\n        resolve(prog_data[0]);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        navigate('/manage-cards/')\r\n        return null;\r\n      }) \r\n      .finally(()=>{\r\n      })\r\n    })\r\n  }\r\n\r\n  setFieldValues() {\r\n    let valFields = this.state.card_program.program_template\r\n    let formfields = []\r\n\r\n    for(let ind = 0; ind < defaultFields.length; ind++){\r\n      formfields.push(defaultFields[ind])\r\n    }\r\n    \r\n    for(let ind = 0; ind < valFields.length; ind++){\r\n      valFields[ind].name = valFields[ind].label.toString().toLowerCase().replace(/\\s/g, '_')\r\n      formfields.push(valFields[ind])\r\n    }\r\n    console.log(\"form fileds :\", formfields)\r\n    console.log(\"data :\", this.props.location.state)\r\n\r\n    Object.entries(this.props.location.state).forEach(([key, value]) => {\r\n      for(let index = 0; index < formfields.length; index++){\r\n        if (key === formfields[index].name){\r\n          formfields[index].value = value\r\n        }\r\n      }\r\n    })\r\n\r\n    if (this.props.location.state.code_fields){\r\n      Object.entries(this.props.location.state.code_fields).forEach(([key, value]) => {\r\n        for(let index = 0; index < formfields.length; index++){\r\n          if (key === formfields[index].name){\r\n            formfields[index].value = value\r\n          }\r\n        }\r\n      })\r\n    }\r\n\r\n    if (this.props.location.state.server_fields){\r\n      Object.entries(this.props.location.state.server_fields).forEach(([key, value]) => {\r\n        for(let index = 0; index < formfields.length; index++){\r\n          if (key === formfields[index].name){\r\n            formfields[index].value = value\r\n          }\r\n        }\r\n      })\r\n    }\r\n\r\n    console.log(\"code fileds; \", this.props.location.state.code_fields)\r\n    console.log(\"server fields: \", this.props.location.state.server_fields)\r\n    console.log(\"form fields: \", formfields)\r\n\r\n    this.setState({formFields: formfields})\r\n  }\r\n\r\n  getCreatedUser(){\r\n    const token = localStorage.getItem('token');\r\n    const beartoken = \"Bearer \" + token;\r\n    const headers = { \r\n      'Authorization': beartoken\r\n    };\r\n\r\n    return new Promise(resolve => {\r\n      const card_URL = serverURL + '/api/users/'+this.props.location.state.created_user;\r\n      axios.get(card_URL, { headers })\r\n      .then(response => {\r\n        const user_data = response.data.data;\r\n        \r\n        this.setState({created_user: user_data[0]})\r\n        resolve(user_data[0]);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        navigate('/manage-cards/')\r\n        return null;\r\n      }) \r\n      .finally(()=>{\r\n      })\r\n    })\r\n  }\r\n\r\n  onSave = () => {\r\n    const token = localStorage.getItem('token')\r\n    const userid = localStorage.getItem('userId')\r\n    const urlAPI = cryptoURL + '/api/encode/' \r\n    const beartoken = 'Bearer ' + token\r\n    const headers = {\r\n      Authorization: beartoken,\r\n    }\r\n    var fields = this.state.formFields\r\n\r\n    let isValid = true;\r\n    let newShowError = {};\r\n    for (let i = 0; i < fields.length; i++) {\r\n      if (!fields[i].value && i != 1 && i != 4){        \r\n        newShowError[fields[i].name] = \"This field is required\";\r\n        isValid = false;\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      showError: newShowError\r\n    })\r\n\r\n    if(!isValid){\r\n      return;\r\n    }\r\n\r\n    var body = {}\r\n    let code_fields = {}\r\n    let server_fields = {}\r\n    for (let i = 0; i < fields.length; i++) {\r\n      if (fields[i].extend){\r\n        server_fields[fields[i].name] = fields[i].value\r\n      } else{\r\n        code_fields[fields[i].name] = fields[i].value\r\n      }\r\n    }\r\n    delete code_fields.program_name\r\n    delete code_fields.card_id\r\n    delete code_fields.available\r\n\r\n    body['code_fields'] = code_fields\r\n    body['server_fields'] = server_fields\r\n    body['compressed_image'] = this.state.webp\r\n    body['program_id'] = this.props.location.state.program_id\r\n    body['created_user'] = userid\r\n    body['modified_user'] = userid\r\n    body['available'] = true\r\n\r\n    // console.log(\"body : \", body)\r\n\r\n    let req_body = {}\r\n    req_body['message'] = body\r\n    req_body['matrixsize'] = this.state.card_program.matrix_size\r\n    req_body['compression'] = this.state.card_program.compression\r\n    req_body['edac'] = this.state.card_program.edac\r\n    \r\n    this.setState({\r\n      loader:true\r\n    })\r\n    axios\r\n      .post(urlAPI, req_body, { headers })\r\n      .then(response => {\r\n        if (response.data.status === 'success') {          \r\n          this.setState({\r\n            barcode: response.data.data,\r\n            openOrderConfirm:true,\r\n            loader:false\r\n          })\r\n        } else {\r\n          this.setState({ loader: false, showError: true, message: response.data.message.toString() })\r\n        }\r\n      })\r\n      .catch(error => {\r\n        this.setState({ loader: false, showError: true , message:error.toString()})\r\n      })\r\n  }\r\n\r\n  onCancel = () => {\r\n    let fields = this.state.formFields\r\n    Object.entries(this.props.location.state).forEach(([key, value]) => {\r\n      for(let index = 0; index < fields.length; index++){\r\n        if (key == fields[index].name){\r\n          fields[index].value = value\r\n        }\r\n      }\r\n    })\r\n\r\n    if (this.props.location.state.code_fields){\r\n      Object.entries(this.props.location.state.code_fields).forEach(([key, value]) => {\r\n        for(let index = 0; index < fields.length; index++){\r\n          if (key == fields[index].name){\r\n            fields[index].value = value\r\n          }\r\n        }\r\n      })\r\n    }\r\n\r\n    if (this.props.location.state.server_fields){\r\n      Object.entries(this.props.location.state.server_fields).forEach(([key, value]) => {\r\n        for(let index = 0; index < fields.length; index++){\r\n          if (key == fields[index].name){\r\n            fields[index].value = value\r\n          }\r\n        }\r\n      })\r\n    }\r\n\r\n    this.setState({ \r\n      openOrderConfirm: false, \r\n      showEditButton: true,\r\n      barcode:this.props.location.state.barcode,\r\n      formFields:fields,\r\n      webp:this.props.location.state.compressed_face_image,\r\n      photo:this.props.location.state.face_image,\r\n      showError:false\r\n    })\r\n  }\r\n\r\n  onConfirmOrder = () => {\r\n    const token = localStorage.getItem('token')\r\n    const userid = localStorage.getItem('userId')\r\n    const urlAPI = API_URL + '/cards/'\r\n    const beartoken = 'Bearer ' + token\r\n    const headers = {\r\n      Authorization: beartoken,\r\n    }\r\n\r\n    let fields = this.state.formFields\r\n    let body = {}\r\n    let code_fields = {}\r\n    let server_fields = {}\r\n    for (let i = 0; i < fields.length; i++) {\r\n      if (fields[i].extend){\r\n        server_fields[fields[i].name] = fields[i].value\r\n      } else{\r\n        code_fields[fields[i].name] = fields[i].value\r\n      }\r\n    }\r\n\r\n    body['card_id'] = code_fields.card_id\r\n    body['card_status'] = code_fields.available\r\n\r\n    delete code_fields.program_name\r\n    delete code_fields.card_id\r\n    delete code_fields.available\r\n\r\n    body['face_image'] = this.state.photo\r\n    body['compressed_face_image'] = this.state.webp\r\n    body['program_id'] = this.props.location.state.program_id\r\n    body['code_fields'] = code_fields\r\n    body['server_fields'] = server_fields\r\n    body['barcode'] = this.state.barcode\r\n    body['nfc_fields'] = ''\r\n    body['modified_user'] = userid\r\n\r\n    // console.log('req body :', body)\r\n    axios\r\n      .put(urlAPI, body, { headers })\r\n      .then(response => {\r\n        console.log(\"response : \",response)\r\n        if (response.data.status === 'unauthorized') {\r\n          this.setState({ loader: false, showError: true, message: response.data.message.toString() })\r\n        } else {\r\n          this.setState({\r\n            resultTitle: 'Your card has been updated. Finish update?',\r\n            openResultDlg: true,\r\n            loader: false,\r\n            showCodeLabel:false,\r\n            showEditButton: true,\r\n            showError: false\r\n          })\r\n          \r\n        }\r\n      })\r\n      .catch(error => {\r\n        this.setState({ loader: false, showError: true, message:error })\r\n      })\r\n    \r\n    this.setState({ loader: true, openOrderConfirm: false })\r\n\r\n  }\r\n\r\n  onPrint = () => {\r\n    const token = localStorage.getItem('token')\r\n    const userid = localStorage.getItem('userId')\r\n    const urlAPI = API_URL + '/generate_card'\r\n    const beartoken = 'Bearer ' + token\r\n    const headers = {\r\n      Authorization: beartoken,\r\n    }\r\n\r\n    let fields = this.state.formFields\r\n    let body = {}\r\n    let code_fields = {}\r\n    let server_fields = {}\r\n    for (let i = 0; i < fields.length; i++) {\r\n      if (fields[i].extend){\r\n        server_fields[fields[i].name] = fields[i].value\r\n      } else{\r\n        code_fields[fields[i].name] = fields[i].value\r\n      }\r\n    }\r\n\r\n    body['face_image'] = this.state.photo\r\n    body['compressed_face_image'] = this.state.webp\r\n    body['code_fields'] = code_fields\r\n    body['server_fields'] = server_fields\r\n    body['program_id'] = this.props.location.state.program_id\r\n    body['barcode'] = this.state.barcode\r\n    body['barcode_size'] = this.state.card_program.matrix_size\r\n    body['modified_user'] = userid\r\n    body['front_image'] = this.state.card_program.card_image_front\r\n    body['back_image'] = this.state.card_program.card_image_back\r\n    body['logo'] = this.state.card_program.logo\r\n\r\n    // console.log('req body :', body)\r\n    axios\r\n      .post(urlAPI, body, { headers })\r\n      .then(response => {\r\n        console.log(\"response : \",response)\r\n        if (response.data.status === 'Unauthorized') {\r\n          this.setState({ loader: false, showError: true, message: response.data.message.toString() })\r\n        } else {\r\n          this.setState({\r\n            resultTitle: 'Virtual Card has generated. ' + serverURL + '/vcards/' + response.data.vcard,\r\n            openResultDlg: true,\r\n            loader: false,\r\n            showCodeLabel:false,\r\n            showEditButton: true,\r\n            showError: false\r\n          })\r\n          \r\n        }\r\n      })\r\n      .catch(error => {\r\n        this.setState({ loader: false, showError: true, message:error })\r\n      })\r\n    this.setState({ loader: true, openOrderConfirm: false })\r\n  }\r\n\r\n  render() {\r\n    const { userData, classes, transitionDuration, isDesktop } = this.props\r\n\r\n    const buttonWidth = isDesktop ? '50%' : 120\r\n\r\n    const btnStyle = {\r\n      width: buttonWidth,\r\n      float: 'right',\r\n      marginLeft: 5,\r\n      marginRight: 5,\r\n      marginBottom: 20,\r\n      minWidth: 120,\r\n    }\r\n\r\n    const rightGridStyle = isDesktop\r\n      ? {\r\n          minWidth: 150,\r\n        }\r\n      : {\r\n          minWidth: '90vw',\r\n        }\r\n        \r\n    return (\r\n      <MainLayout menuIndex={this.props.menuIndex}>\r\n        <Grid\r\n          container\r\n          justify=\"center\"\r\n          spacing={2}\r\n          style={{ minHeight: '100%' }}\r\n        >\r\n          <Grid item sm={4} xs={12} className={classes.cardViewGridLeft}>\r\n            <CardFrontBack editMode={!this.state.showEditButton}\r\n                      card_id={this.props.location.state.card_id}\r\n                      program_id={this.props.location.state.program_id}\r\n                      program_front={this.state.card_program.card_image_front}\r\n                      program_back={this.state.card_program.card_image_back}\r\n                      logo={this.state.card_program.logo}\r\n                      first_name={this.props.location.state.first_name}\r\n                      middle_name={this.props.location.state.middle_name}\r\n                      last_name={this.props.location.state.last_name}\r\n                      webp={this.state.webp}\r\n                      photo={this.state.photo} \r\n                      ordered_date={this.props.location.state.ordered_date} \r\n                      created_user={this.state.created_user}\r\n                      barcode={this.state.barcode} \r\n                      onChanged={(changedWebp, changedPhoto) => {\r\n                            console.log('picture changed')\r\n                            this.setState({\r\n                              isPhotoChanged:true,\r\n                              webp:changedWebp,\r\n                              photo:changedPhoto,\r\n                            })\r\n                      }}/>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={5}\r\n            xs={12}\r\n            className={classes.cardViewGrid}\r\n            style={{ marginRight: 5 }}\r\n          >\r\n            <Paper style={{ padding: '0 10px' }} elevation={0}>\r\n              {this.state.formFields.map((one, index) => {\r\n                let disable = true\r\n                let showErr = ''\r\n                if(one.name && !this.state.showEditButton){\r\n                  disable = false\r\n                  showErr = this.state.showError[one.name];\r\n                }\r\n                return (\r\n                  <FilledTextInput\r\n                    key={Utils.getKey()}\r\n                    label={one.label}\r\n                    type={one.type}\r\n                    value ={one.value}\r\n                    placeholder={one.placeholder}\r\n                    formFields={this.formFields.bind(this)}\r\n                    showError={showErr} \r\n                    disable={disable}\r\n                  />\r\n                )\r\n              })}\r\n            </Paper>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            md={3}\r\n            sm={12}\r\n            className={classes.cardViewGrid}\r\n            style={rightGridStyle}\r\n          >\r\n            <Paper\r\n              style={{\r\n                padding: 10,\r\n                display: 'flex',\r\n                width: '100%',\r\n\r\n                flexDirection: isDesktop ? 'column' : 'row',\r\n                justifyContent: 'center',\r\n                alignItems: isDesktop ? 'stretch' : 'center',\r\n                flexWrap: isDesktop ? 'nowrap' : 'wrap',\r\n              }}\r\n              elevation={0}\r\n            >\r\n              {this.state.showEditButton ? (\r\n                <>\r\n                  <div>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      size=\"medium\"\r\n                      color=\"primary\"\r\n                      style={btnStyle}\r\n                      onClick={()=>{\r\n                        navigate('/manage-cards/')\r\n                      }}\r\n                    >\r\n                      Next Card\r\n                    </Button>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      size=\"medium\"\r\n                      color=\"primary\"\r\n                      style={btnStyle}\r\n                      onClick={this.onPrint}\r\n                    >\r\n                      Print\r\n                    </Button>\r\n                  </div>\r\n                  <div>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      size=\"medium\"\r\n                      color=\"primary\"\r\n                      style={btnStyle}\r\n                    >\r\n                      Write NFC\r\n                    </Button>\r\n                  </div>\r\n                  <div>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      size=\"medium\"\r\n                      color=\"secondary\"\r\n                      style={btnStyle}\r\n                    >\r\n                      Reject\r\n                    </Button>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <div>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      size=\"medium\"\r\n                      color=\"primary\"\r\n                      style={btnStyle}\r\n                      onClick={this.onSave}\r\n                      disabled={this.state.showEditButton}\r\n                    >\r\n                      Update\r\n                    </Button>\r\n                  </div>\r\n                  <div>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      size=\"medium\"\r\n                      color=\"primary\"\r\n                      style={btnStyle}\r\n                      onClick={this.onCancel}\r\n                    >\r\n                      cancel\r\n                    </Button>\r\n                  </div>\r\n                </>\r\n              )}\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Zoom\r\n          key={Utils.getKey()}\r\n          in={this.state.showEditButton}\r\n          timeout={transitionDuration}\r\n          style={{\r\n            transitionDelay: `${500}ms`,\r\n          }}\r\n          unmountOnExit\r\n        >\r\n          <Fab\r\n            aria-label={''}\r\n            style={{ position: 'fixed', bottom: 20, right: 30 }}\r\n            color={'primary'}\r\n            onClick={() => {\r\n              this.setState({ showEditButton: !this.state.showEditButton })\r\n            }}\r\n          >\r\n            <img\r\n              src={EditImg}\r\n              style={{ width: 25, objectFit: 'contain', marginTop: 25 }}\r\n            />\r\n          </Fab>\r\n        </Zoom>\r\n\r\n        <ConfirmDlg\r\n          title='You are about to update this card, Are you sure you want to do this?'\r\n          open={this.state.openOrderConfirm}\r\n          okTitle='Update'\r\n          onOk={this.onConfirmOrder}\r\n          onCancel={this.onCancel}\r\n        />\r\n        <ConfirmDlg\r\n          title={this.state.resultTitle}\r\n          open={this.state.openResultDlg}\r\n          okTitle='OK'\r\n          cancel=''\r\n          onOk={()=>{\r\n            this.setState({ \r\n              showEditButton: true,\r\n              openResultDlg: false\r\n            })\r\n          }}\r\n          onCancel={() => {\r\n            this.setState({ \r\n              showEditButton: false,\r\n              openResultDlg: false\r\n            })\r\n          }}\r\n        />\r\n\r\n        <Backdrop className={classes.backdrop} open={this.state.loader}>\r\n          <CircularProgress color='inherit' />\r\n        </Backdrop>\r\n      </MainLayout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default function(props) {\r\n  const dispatch = useDispatch()\r\n  const userData = useSelector(state => state.app.userData)\r\n  const classes = useStyles()\r\n\r\n  const theme = useTheme()\r\n  const transitionDuration = {\r\n    enter: theme.transitions.duration.enteringScreen,\r\n    exit: theme.transitions.duration.leavingScreen,\r\n  }\r\n\r\n  // const isDesktop = useMediaQuery(theme.breakpoints.up('md'))\r\n  const isDesktop = useMediaQuery('(min-width:1053px)')\r\n\r\n  return (\r\n    <ViewManageCard\r\n      {...props}\r\n      menuIndex={0}\r\n      dispatch={dispatch}\r\n      isDesktop={isDesktop}\r\n      //   userData={userData}\r\n      classes={classes}\r\n      transitionDuration={transitionDuration}\r\n    />\r\n  )\r\n}\r\n"],"sourceRoot":""}