{"version":3,"sources":["webpack:///./src/state/actions.js","webpack:///./node_modules/@material-ui/core/esm/Grid/Grid.js","webpack:///./src/pages/admin/card-programs/index.js"],"names":["setSelCard","data","type","SET_SEL_CARD","SPACINGS","GRID_SIZES","getOffset","val","div","arguments","length","undefined","parse","parseFloat","concat","String","replace","Grid","props","ref","_props$alignContent","alignContent","_props$alignItems","alignItems","classes","classNameProp","className","_props$component","component","Component","_props$container","container","_props$direction","direction","_props$item","item","_props$justify","justify","_props$lg","lg","_props$md","md","_props$sm","sm","_props$spacing","spacing","_props$wrap","wrap","_props$xl","xl","_props$xs","xs","_props$zeroMinWidth","zeroMinWidth","other","root","StyledGrid","theme","boxSizing","display","flexWrap","width","margin","minWidth","flexDirection","justifyContent","breakpoint","styles","forEach","themeSpacing","padding","generateGutter","breakpoints","keys","reduce","accumulator","key","globalStyles","size","Math","round","flexBasis","flexGrow","maxWidth","up","generateGrid","name","API_URL","serverURL","columns","field","headerName","CardsDataTable","cardrows","map","row","id","program_id","React","useRef","rows","rowLength","maxColumns","dispatch","useDispatch","useState","allCards","setAllCards","page","setPage","setRows","pageSize","setPageSize","loading","setLoading","filterCardData","filter_name","filter_status","resultdata","filter","card","program_name","includes","cardstatus","carddata","newCards","slice","status","program_enabled","date","created_date","loadServerRows","useEffect","headers","localStorage","getItem","Promise","resolve","setTimeout","axios","get","then","response","cards","catch","error","console","log","finally","random","loadSeverCardData","style","autoHeight","pagination","rowsPerPageOptions","onPageSizeChange","pageCount","rowCount","checkboxSelection","paginationMode","onPageChange","params","onCellClick","event","selectManageCard","program_template","matrix_size","compression","logo","card_image_front","card_image_back","edac","pxpcw","sampleWidth","sample_width","navigate","state","gotoCardView","CardPrograms","onNewProgram","d","Date","month","getMonth","day","getDate","year","getFullYear","today","onTapSearch","roles","isLogin","create_roles","componentDidMount","this","userData","basicData","render","menuIndex","marginLeft","marginRight","paddingLeft","paddingRight","background","VColor","lightGray","htmlFor","value","variant","onChange","e","setState","target","endAdornment","position","aria-label","onClick","onMouseDown","fullWidth","labelId","color","useSelector","app","useStyles"],"mappings":"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","file":"component---src-pages-admin-card-programs-index-js-47127ebfb5fcc09af7e6.js","sourcesContent":["import {\r\n    \r\n    STORE_USER_DATA,\r\n    SET_SEL_CARD\r\n} from \"./constants\"\r\n\r\n\r\nexport const storeUserData = userData => ({\r\n    type: STORE_USER_DATA, userData\r\n});\r\n\r\nexport const setSelCard = data => ({\r\n    type: SET_SEL_CARD, data\r\n})","import \"core-js/modules/es.array.reduce.js\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\"; // A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var parse = parseFloat(val);\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport var styles = function styles(theme) {\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"row-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"center\"`. */\n    'justify-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justify=\"flex-end\"`. */\n    'justify-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-between\"`. */\n    'justify-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-around\"`. */\n    'justify-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n    'justify-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\nvar Grid = /*#__PURE__*/React.forwardRef(function Grid(props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      _props$justify = props.justify,\n      justify = _props$justify === void 0 ? 'flex-start' : _props$justify,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutProperties(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], justify !== 'flex-start' && classes[\"justify-xs-\".concat(String(justify))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nvar StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;","import React from 'react'\r\nimport { navigate } from 'gatsby'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { DataGrid } from '@material-ui/data-grid'\r\nimport IconButton from '@material-ui/core/IconButton'\r\n\r\nimport useStyles from '../../../utils/styles'\r\nimport Search from '@material-ui/icons/Search'\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport Button from '@material-ui/core/Button'\r\nimport Input from '@material-ui/core/Input'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Select from '@material-ui/core/Select'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport axios from 'axios'\r\nimport { MainLayout } from '../../../components/Layout'\r\nimport { VColor } from '../../../utils/constants'\r\nimport { Grid } from '@material-ui/core'\r\n\r\nimport { setSelCard } from '../../../state/actions'\r\nimport {serverURL} from '../../../utils/RestAPI'\r\n\r\nconst API_URL = serverURL + '/api/allcardprograms/';\r\n\r\nconst columns = [  \r\n  { field: 'status', headerName: 'Status', width: 160 },\r\n  { field: 'program_name', headerName: 'Program Name', width: 300 },\r\n  { field: 'date', headerName: 'Date Created', width: 200 },\r\n]\r\n\r\nexport function CardsDataTable(props) {\r\n\r\n  var cardrows = props.data;\r\n  if (typeof cardrows !== 'undefined'){\r\n    cardrows = cardrows.map((row) => {\r\n      row.id = row.program_id;\r\n      return row\r\n     });\r\n  }\r\n\r\n   const data = React.useRef({\r\n   columns: columns,\r\n   rows : cardrows,\r\n   rowLength: 100,\r\n   maxColumns: 4,\r\n  });\r\n\r\n  const dispatch = useDispatch()\r\n  \r\n  const [allCards, setAllCards] = React.useState([])\r\n  const [page, setPage] = React.useState(0)\r\n  const [rows, setRows] = React.useState([])\r\n  const [pageSize, setPageSize] = React.useState(10)\r\n\r\n  const [loading, setLoading] = React.useState(false)\r\n\r\n  const handlePageChange = params => {\r\n    setPage(params)\r\n  }\r\n\r\nconst loadSeverCardData = ()=>\r\n{\r\n  setLoading(true)\r\n  const token = localStorage.getItem('token');\r\n  const beartoken = \"Bearer \" + token;\r\n  const headers = { \r\n    'Authorization': beartoken\r\n  };\r\n\r\n  return new Promise(resolve => {\r\n     setTimeout(() => {\r\n      axios.get(API_URL, { headers })\r\n      .then(response => {\r\n        const cards = response.data.data;\r\n        setAllCards(cards);\r\n        resolve(cards);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        return null;\r\n      }) \r\n      .finally(()=>{\r\n       setLoading(false)\r\n      })\r\n    }, Math.random() * 500 + 100) // simulate network latency\r\n  })\r\n}\r\n\r\nconst loadServerRows = (carddata)=>{\r\n  if (carddata !== 'undefined'){\r\n    const cards = carddata.slice(page * pageSize, (page + 1) * pageSize)\r\n    const newCards = cards.map(card=>{\r\n      card.id= card.program_id;\r\n      card.status = 'Available'\r\n      if (!card.program_enabled){\r\n        card.status = 'Disabled'\r\n      }\r\n      card.date = card.created_date\r\n      return card;\r\n    })\r\n    setRows(newCards);\r\n  }\r\n}\r\n\r\nconst filterCardData = (filter_name, filter_status) => {\r\n  if (allCards.length > 0){\r\n    let resultdata = allCards\r\n    if (filter_name){\r\n      resultdata = resultdata.filter((card) => {\r\n        return card.program_name.includes(filter_name)\r\n      });\r\n    }\r\n    if (filter_status){\r\n      resultdata = resultdata.filter((card) => {\r\n        return card.cardstatus == filter_status\r\n      });\r\n    }\r\n\r\n    loadServerRows(resultdata)\r\n  }\r\n}\r\n\r\n  React.useEffect(() => {\r\n    let active = true;\r\n\r\n    loadSeverCardData();\r\n\r\n    return () => {\r\n      active = false\r\n    }\r\n  }, [page, data, pageSize])\r\n\r\n  React.useEffect(() => {\r\n    filterCardData(props.program_name, props.status);\r\n  }, [props.program_name, props.status, allCards])\r\n\r\n  const gotoCardView = data => {\r\n\r\n    var selectManageCard={\r\n      program_id: data.program_id, \r\n      program_name: data.program_name,\r\n      program_enabled: data.program_enabled, \r\n      program_template: data.program_template,\r\n      matrix_size: data.matrix_size,\r\n      compression: data.compression,       \r\n      logo: data.logo,   \r\n      card_image_front: data.card_image_front,\r\n      card_image_back: data.card_image_back,\r\n      edac: data.edac,\r\n      pxpcw: data.pxpcw,\r\n      sampleWidth: data.sample_width,\r\n      created_date: data.created_date,\r\n    }\r\n\r\n    dispatch(setSelCard(data))\r\n    navigate('/admin/card-programs/view', {state: selectManageCard})\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: '100%',\r\n      }}\r\n    >\r\n      <DataGrid\r\n        rows={rows}\r\n        columns={columns}\r\n        autoHeight\r\n        pagination\r\n        pageSize={10}\r\n        rowsPerPageOptions={[5, 10, 20]}\r\n        onPageSizeChange={({ page, pageCount, pageSize, rowCount }) => {\r\n          setPageSize(pageSize)\r\n        }}\r\n        rowCount={100}\r\n        checkboxSelection\r\n        paginationMode=\"server\"\r\n        onPageChange={handlePageChange}\r\n        loading={loading}\r\n        onCellClick={(data, event) => {\r\n          console.log('cellData : ', data.row)\r\n          gotoCardView(data.row)\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nclass CardPrograms extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    const roles = localStorage.getItem('user_role')\r\n\r\n    this.state = {\r\n      isLogin: true,\r\n      cards:[],\r\n      status: '',\r\n      program_name:'',\r\n      create_roles: roles === 'Administrator' || roles === 'Program Manager'\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { dispatch, userData, basicData } = this.props\r\n  }\r\n\r\n  onNewProgram = ()=>{\r\n    // make current date \r\n    let d = new Date(),\r\n        month = '' + (d.getMonth() + 1),\r\n        day = '' + d.getDate(),\r\n        year = d.getFullYear();\r\n\r\n    if (month.length < 2) \r\n        month = '0' + month;\r\n    if (day.length < 2) \r\n        day = '0' + day;\r\n    const today = month + '-' + day + '-' + year\r\n\r\n    var selectManageCard={\r\n      program_id: this.state.cards.length + 1, \r\n      program_name: '',\r\n      program_enabled: true, \r\n      program_template: [],\r\n      matrix_size: 114,\r\n      compression: '0',       \r\n      logo: '',   \r\n      card_image_front: '',\r\n      card_image_back: '',\r\n      edac: 2,\r\n      pxpcw: 4,\r\n      sampleWidth: 4,\r\n      created_date: today,\r\n    }\r\n    navigate('/admin/card-programs/create', {state: selectManageCard})\r\n  }\r\n\r\n  onTapSearch = ()=>{\r\n\r\n  }\r\n\r\n  render() {\r\n    const { userData, classes } = this.props\r\n\r\n    return (\r\n        <MainLayout menuIndex={5}>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n            style={{ maxWidth: 900, marginLeft: 'auto', marginRight: 'auto' }}\r\n          >\r\n            <Grid item sm={6}>\r\n              <div\r\n                style={{\r\n                  paddingLeft: 5,\r\n                  paddingRight: 5,\r\n                  background: VColor.lightGray,\r\n                  maxWidth: 300,\r\n                }}\r\n              >\r\n                <FormControl style={{ width: '100%' }}>\r\n                  <InputLabel htmlFor=\"filled-basic\">Card Program Name</InputLabel>\r\n                  <Input\r\n                    id=\"filled-basic\"\r\n                    type={'text'}\r\n                    value={this.state.program_name}\r\n                    variant=\"filled\"\r\n                    onChange={e => {\r\n                      this.setState({ program_name: e.target.value })\r\n                    }}\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          onClick={this.onTapSearch}\r\n                          onMouseDown={this.onTapSearch}\r\n                        >\r\n                          <Search />\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                  />\r\n                </FormControl>\r\n              </div>\r\n            </Grid>\r\n            <Grid item sm={4} xs={false}></Grid>\r\n            <Grid item sm={2} xs={12}>\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"select-status\">Status</InputLabel>\r\n                <Select\r\n                  labelId=\"select-status\"\r\n                  id=\"select-status\"\r\n                  value={this.state.status}\r\n                  fullWidth\r\n                  onChange={e => {\r\n                    this.setState({ status: e.target.value })\r\n                  }}\r\n                >\r\n                  <MenuItem value={1}>Enabled</MenuItem>                  \r\n                  <MenuItem value={2}>Disabled</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <CardsDataTable \r\n                data={this.state.cards}\r\n                program_name={this.state.program_name}\r\n                status={this.state.status}/>\r\n            </Grid>\r\n            { this.state.create_roles ? \r\n            <Grid item md={3} sm={4} xs={12}>\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"medium\"\r\n                color=\"primary\"\r\n                fullWidth\r\n                onClick={this.onNewProgram}\r\n              >\r\n                New Program\r\n              </Button>\r\n            </Grid> : null }\r\n          </Grid>\r\n        </MainLayout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default function(props) {\r\n  const dispatch = useDispatch()\r\n  const userData = useSelector(state => state.app.userData)\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <CardPrograms\r\n      {...props}\r\n      dispatch={dispatch}\r\n      userData={userData}\r\n      classes={classes}\r\n    />\r\n  )\r\n}\r\n"],"sourceRoot":""}